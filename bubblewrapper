#!/bin/sh
# Command line interface for bubblewrapper. Usage:
# bubblewrapper setup <namespace> | Configures the namspace for later use. Installs
#                                   the base set of packages.
# bubblewrapper start <namespace> | Spawn an SH shell in the namespace.
# bubblewrapper install <namspace> <package> | Install the given packages into the
#                                             namespace.
#

#Configuration options:
BASE_PACKAGES="coreutils file less sed vi which gawk grep"
PACKAGER="pacman"
UPDATE_ARGS="-Syu --noconfirm"
UNINSTALL_ARGS="-R"
SANDBOX_DIRECTORY=~/.sandboxes

# Setups up a new sandbox with the BASE_PACKAGES and the specified packages
# installed.
bubblewrapper_setup() {
    mkdir -p $SANDBOX_DIRECTORY/${NAMESPACE}/files/var/lib/pacman
    mkdir -p $SANDBOX_DIRECTORY/${NAMESPACE}/files/etc
    mkdir -p ${SANDBOX_DIRECTORY}/${NAMESPACE}/files/usr/bin
    mkdir -p ${SANDBOX_DIRECTORY}/${NAMESPACE}/files/usr/lib
    cp /etc/pacman.conf $SANDBOX_DIRECTORY/${NAMESPACE}/files/etc/pacman.conf

    fakechroot fakeroot $PACKAGER \
        --root $SANDBOX_DIRECTORY/${NAMESPACE}/files \
        --dbpath $SANDBOX_DIRECTORY/${NAMESPACE}/files/var/lib/pacman  \
        --config $SANDBOX_DIRECTORY/${NAMESPACE}/files/etc/pacman.conf \
        --cachedir ${SANDBOX_DIRECTORY}/${NAMESPACE}/files/var/cache/pacman \
        $UPDATE_ARGS $BASE_PACKAGES
}

bubblewrapper_install() {
    echo $@
    fakechroot fakeroot $PACKAGER \
        --root $SANDBOX_DIRECTORY/${NAMESPACE}/files \
        --dbpath $SANDBOX_DIRECTORY/${NAMESPACE}/files/var/lib/pacman  \
        --config $SANDBOX_DIRECTORY/${NAMESPACE}/files/etc/pacman.conf \
        --cachedir ${SANDBOX_DIRECTORY}/${NAMESPACE}/files/var/cache/pacman \
        $UPDATE_ARGS $@
}

bubblewrapper_uninstall() {
    fakechroot fakeroot $PACKAGER \
        --root $SANDBOX_DIRECTORY/${NAMESPACE}/files \
        --dbpath $SANDBOX_DIRECTORY/${NAMESPACE}/files/var/lib/pacman  \
        --config $SANDBOX_DIRECTORY/${NAMESPACE}/files/etc/pacman.conf \
        --cachedir ${SANDBOX_DIRECTORY}/${NAMESPACE}/files/var/cache/pacman \
        $UNINSTALL_ARGS $@
}

# Update namespace. If a namespace is not specifed, update everything.
sandboxed_update() {
    if [[ -z ${NAMESPACE} ]]; then
        for namespace in ${SANDBOX_DIRECTORY}/*; do
            name=${namespace##*/}
            NAMESPACE=$name
            bubblewrapper_install;
        done
    else
        bubblewrapper_install;
    fi
}

bubblewrapper_shell() {
    set -euo pipefail
    (exec bwrap --ro-bind /usr /usr \
      --bind ${SANDBOX_DIRECTORY}/${NAMESPACE}/files/ / \
      --dir /tmp \
      --dir /var \
      --ro-bind ${SANDBOX_DIRECTORY}/${NAMESPACE}/files/usr /usr \
      --proc /proc \
      --dev /dev \
      --ro-bind /etc/resolv.conf /etc/resolv.conf \
      --chdir / \
      --unshare-all \
      --hostname ${NAMESPACE} \
      --die-with-parent \
      --dir /run/user/$(id -u) \
      --setenv XDG_RUNTIME_DIR "/run/user/`id -u`" \
      --setenv PS1 "${NAMESPACE}> " \
      /usr/bin/sh) \
}

bubblewrapper_destroy() {
    rm -rf ${SANDBOX_DIRECTORY}/${NAMESPACE}
}

# CLI
NAMESPACE=$2
if [[ $1 = "setup" ]]; then
    echo "branch: setup"
    bubblewrapper_setup;
elif [[ $1 = "start" ]]; then
    bubblewrapper_shell;
elif [[ $1 = "install" ]]; then
    echo "branch: install"
    bubblewrapper_install $3;
elif [[ $1 = "uninstall" ]]; then
    bubblewrapper_uninstall $3;
elif [[ $1 = "destroy" ]]; then
    bubblewrapper_destroy;
elif [[ $1 = "update" ]]; then
    sandboxed_update;
fi
